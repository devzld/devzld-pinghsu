[

{
"title"    : "使用jsdelivr免费CDN加速你的网站",
"category" : "技术教程",
"description" : "",
"tags"     : "",
"url"      : "/2019-10-24-%E4%BD%BF%E7%94%A8jsdelivr%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F%E4%BD%A0%E7%9A%84%E7%BD%91%E7%AB%99",
"date"     : "2019-10-24 00:00:00 +0800",
"content"  : "jsDelivr 是国外的一家优秀的公共 CDN 服务提供商，也是首个打通中国大陆（网宿公司运营）与海外的免费 CDN 服务。jsDelivr 有一个十分好用的功能——它可以加速 Github 仓库的文件。借此我们可以用来加速我们的网站。首先在Github上建一个公开的仓库，比如我建的名为static的库，在Github上访问路径是https://github.com/devzld/static/blob/master/asset/js/jquery.js对应jsdelivr访问路径是：https://cdn.jsdelivr.net/gh/devzld/staticmaster/asset/js/jquery.js和https://cdn.jsdelivr.net/gh/devzld/staticmaster/asset/js/jquery.min.js缩小版本功能，将“.min”添加到任何JS / CSS文件中，jsdelivr将自动生成文件。"
} ,

{
"title"    : "一次异常OutOfMemoryError",
"category" : "Android",
"description" : "",
"tags"     : "",
"url"      : "/2019-10-24-%E4%B8%80%E6%AC%A1%E5%BC%82%E5%B8%B8OutOfMemoryError",
"date"     : "2019-10-24 00:00:00 +0800",
"content"  : "崩溃日志如下：java.lang.OutOfMemoryError: pthread_create (1040KB stack) failed: Try again    at java.lang.Thread.nativeCreate(Native Method)    at java.lang.Thread.start(Thread.java:1063)    at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:920)    at java.util.concurrent.ThreadPoolExecutor.ensurePrestart(ThreadPoolExecutor.java:1553)    at java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:306)    at java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:503)    at java.util.concurrent.ScheduledThreadPoolExecutor.execute(ScheduledThreadPoolExecutor.java:592)    at okhttp3.internal.http2.Http2ConnectionReaderRunnable.applyAndAckSettings(Http2Connection.java:737)    at okhttp3.internal.http2.Http2ConnectionReaderRunnable.settings(Http2Connection.java:709)    at okhttp3.internal.http2.Http2Reader.readSettings(Http2Reader.java:289)    at okhttp3.internal.http2.Http2Reader.nextFrame(Http2Reader.java:141)    at okhttp3.internal.http2.Http2Reader.readConnectionPreface(Http2Reader.java:80)    at okhttp3.internal.http2.Http2ConnectionReaderRunnable.execute(Http2Connection.java:608)    at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)    at java.lang.Thread.run(Thread.java:818)原因手机限制了线程的最大创建数量，OkHttpClient() 的创建没有采用单例。解决OkHttpClient采用单例模式"
} ,

{
"title"    : "异常android.database.CursorWindowAllocationException",
"category" : "Android",
"description" : "",
"tags"     : "",
"url"      : "/2019-10-24-CursorWindowAllocationException%E5%BC%82%E5%B8%B8",
"date"     : "2019-10-24 00:00:00 +0800",
"content"  : "异常信息如下io.reactivex.exceptions.UndeliverableException: android.database.CursorWindowAllocationException: Cursor window allocation of 2048 kb failed. # Open Cursors=1 (# cursors opened by this proc=1)    at io.reactivex.plugins.RxJavaPlugins.onError(RxJavaPlugins.java:367)    at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:69)    at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)    at java.util.concurrent.FutureTask.run(FutureTask.java:237)    at java.util.concurrent.ScheduledThreadPoolExecutorScheduledFutureTask.access201(ScheduledThreadPoolExecutor.java:152)    at java.util.concurrent.ScheduledThreadPoolExecutorScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:265)    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)    at java.util.concurrent.ThreadPoolExecutorWorker.run(ThreadPoolExecutor.java:587)    at java.lang.Thread.run(Thread.java:818)Caused by: android.database.CursorWindowAllocationException: Cursor window allocation of 2048 kb failed. # Open Cursors=1 (# cursors opened by this proc=1)    at android.database.CursorWindow.lt;initgt;(CursorWindow.java:108)    at android.database.AbstractWindowedCursor.clearOrCreateWindow(AbstractWindowedCursor.java:198)    at android.database.sqlite.SQLiteCursor.fillWindow(SQLiteCursor.java:139)    at android.database.sqlite.SQLiteCursor.getCount(SQLiteCursor.java:133)    at org.greenrobot.greendao.AbstractDao.loadAllFromCursor(AbstractDao.java:453)    at org.greenrobot.greendao.AbstractDao.loadAllAndCloseCursor(AbstractDao.java:203)    at org.greenrobot.greendao.InternalQueryDaoAccess.loadAllAndCloseCursor(InternalQueryDaoAccess.java:37)    at org.greenrobot.greendao.query.Query.list(Query.java:89)    at org.greenrobot.greendao.query.QueryBuilder.list(QueryBuilder.java:427)    at com.dinghao.uboard.newversion.module.function.OfflineCardFragment.submitCardInfo(OfflineCardFragment.java:119)    at com.dinghao.uboard.newversion.module.function.OfflineCardFragment.access200(OfflineCardFragment.java:55)    at com.dinghao.uboard.newversion.module.function.OfflineCardFragment2.onNext(OfflineCardFragment.java:186)    at com.dinghao.uboard.newversion.module.function.OfflineCardFragment2.onNext(OfflineCardFragment.java:178)    at io.reactivex.internal.operators.observable.ObservableObserveOnObserveOnObserver.drainNormal(ObservableObserveOn.java:200)    at io.reactivex.internal.operators.observable.ObservableObserveOnObserveOnObserver.run(ObservableObserveOn.java:252)    at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)原因使用rxjava定时器定时处理数据库，线程模式是Schedulers.io()，因为这个模式没有线程限制，导致线程太多，引起此异常解决改用固定线程数，如Schedulers.single()，单个线程"
} 

]